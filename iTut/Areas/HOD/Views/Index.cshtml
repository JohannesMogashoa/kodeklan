@model iTut.Areas.HOD.Models.ViewModels.HOD.HODIndexViewModel
@{
    ViewData["Title"] = "Home";

}
<script src="~/js/daypilot-all.min.js" asp-append-version="true"></script>
<div id="collapseOffCanvas" class="bg-body offcanvas-collapse open w-100">
    <main class="main-expanded vh-100 w-100">
        <div class="container-fluid px-lg-5">
            <div class="d-flex py-5 border-bottom">
                <span class="d-inline-flex flex-shrink-0 align-items-center justify-content-center mr-3 text-white text-uppercase bg-primary rounded-circle  wh-2-5rem">@Model.HodUser.FirstName.ToCharArray()[0]</span>
                <div class="mr-auto">
                    <h2 class="mb-2 fs-1 lh-tight">Hi, @Model.HodUser.FirstName</h2>
                    <p class="lh-tight">Dashboard</p>
                </div>
                <ul class="list-unstyled d-flex align-items-center">
                    <li class="d-lg-none mr-sm-5">
                        <button class="btn link-body p-0 offcanvas-button" type="button">
                            <svg class="gi gi-arrow-circle-left fs-4" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm-.293 6.293a1 1 0 0 0-1.414 0h0l-3 3-.083.094a1 1 0 0 0 .083 1.32h0l3 3 .094.083a1 1 0 0 0 1.32-.083h0l.083-.094a1 1 0 0 0-.083-1.32h0L10.416 13H16l.117-.007A1 1 0 0 0 16 11h0-5.586l1.293-1.293.083-.094a1 1 0 0 0-.083-1.32z"></path>
                            </svg>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="invisible-scrollbar position-relative wh-main">
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="d-flex align-items-center mb-3">
                            <div class="mr-auto">
                                <h2 class="mb-2 fs-2 lh-tight">Admissions</h2>
                                <p><a asp-action="Admissions">Admissions Management</a></p>
                            </div>
                            <div class="mr-auto">
                                <h2 class="mb-2 fs-2 lh-tight">Timeline</h2>
                                <a class="btn btn-lg btn-primary" asp-area="HOD" asp-page="/Views/Admissions">Admissions</a>
                            </div>
                        </div>
                        <script>

                            const nav = new DayPilot.Navigator("nav");
                            nav.showMonths = 2;
                            nav.skipMonths = 1;
                            nav.selectMode = "month";
                            nav.onTimeRangeSelected = args => {
                                dp.startDate = args.day;
                                dp.update();
                                dp.events.load("/api/events");
                            };
                            nav.init();


                            const dp = new DayPilot.Month("dp");
                            dp.eventHeight = 30;
                            dp.onTimeRangeSelected = async args => {
                                const modal = await DayPilot.Modal.prompt("Create a new event:", "Event");

                                const dp = args.control;
                                dp.clearSelection();
                                if (modal.canceled) {
                                    return;
                                }
                                const params = {
                                    start: args.start,
                                    end: args.end,
                                    text: modal.result,
                                    resource: args.resource
                                };
                                const { data: result } = await DayPilot.Http.post("/api/events", params);
                                dp.events.add(result);
                                dp.message("Event created");

                            };
                            dp.onEventMove = async args => {
                                const params = {
                                    id: args.e.id(),
                                    start: args.newStart,
                                    end: args.newEnd
                                };
                                const id = args.e.id();
                                await DayPilot.Http.put(`/api/events/${id}/move`, params);
                                dp.message("Event moved");
                            };
                            dp.onEventResize = async args => {
                                const params = {
                                    id: args.e.id(),
                                    start: args.newStart,
                                    end: args.newEnd
                                };
                                const id = args.e.id();
                                await DayPilot.Http.put(`/api/events/${id}/move`, params);
                                dp.message("Event resized");
                            };

                            dp.onBeforeEventRender = args => {
                                args.data.backColor = args.data.color;
                                if (args.data.backColor) {
                                    args.data.fontColor = "white";
                                    args.data.borderColor = "darker";
                                }
                                args.data.areas = [
                                    {
                                        top: 6,
                                        right: 4,
                                        width: 16,
                                        height: 16,
                                        symbol: "icons/daypilot.svg#minichevron-down-4",
                                        fontColor: "#999",
                                        visibility: "Hover",
                                        action: "ContextMenu",
                                        style: "background-color: #f9f9f9; border: 1px solid #ccc; cursor:pointer;"
                                    }
                                ];
                            };
                            dp.contextMenu = new DayPilot.Menu({
                                items: [
                                    {
                                        text: "Delete",
                                        onClick: async args => {
                                            const e = args.source;
                                            const id = e.id();
                                            await DayPilot.Http.delete(`/api/events/${id}`);
                                            dp.events.remove(e);
                                            dp.message("Event deleted");
                                        }
                                    },
                                    {
                                        text: "-"
                                    },
                                    {
                                        text: "Blue",
                                        icon: "icon icon-blue",
                                        color: "#3c78d8",
                                        onClick: args => { updateColor(args.source, args.item.color); }
                                    },
                                    {
                                        text: "Green",
                                        icon: "icon icon-green",
                                        color: "#6aa84f",
                                        onClick: args => { updateColor(args.source, args.item.color); }
                                    },
                                    {
                                        text: "Yellow",
                                        icon: "icon icon-yellow",
                                        color: "#f1c232",
                                        onClick: args => { updateColor(args.source, args.item.color); }
                                    },
                                    {
                                        text: "Red",
                                        icon: "icon icon-red",
                                        color: "#cc4125",
                                        onClick: args => { updateColor(args.source, args.item.color); }
                                    },
                                    {
                                        text: "Auto",
                                        color: "",
                                        onClick: args => { updateColor(args.source, args.item.color); }
                                    },
                                ]
                            });
                            dp.init();

                            dp.events.load("/api/events");


                            async function updateColor(e, color) {
                                const params = {
                                    color: color
                                };
                                const id = e.id();
                                await DayPilot.Http.put(`/api/events/${id}/color`, params);
                                e.data.color = color;
                                dp.events.update(e);
                                dp.message("Color updated");
                            }

                            const elements = {
                                previous: document.querySelector("#previous"),
                                today: document.querySelector("#today"),
                                next: document.querySelector("#next"),
                            };

                            elements.previous.addEventListener("click", () => {
                                nav.select(nav.selectionDay.addMonths(-1));
                            });

                            elements.today.addEventListener("click", () => {
                                nav.select(DayPilot.Date.today());
                            });

                            elements.next.addEventListener("click", () => {
                                nav.select(nav.selectionDay.addMonths(1));
                            });

                        </script>
                    </div>
                    <div class="col-12">
                        
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>