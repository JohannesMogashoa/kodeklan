@model List<Complaint>
@{
    ViewData["Title"] = "Complaints";
}
<div id="collapseOffCanvas" class="bg-body offcanvas-collapse open w-100">
    <main class="main-expanded vh-100 w-100">
        <div class="container-fluid px-lg-5">
            <div class="d-flex py-4 border-bottom">
                <div class="mr-auto w-100">
                    <h2 class="mb-2 fs-2 lh-tight">Complaints</h2>
                </div>
                <ul class="list-unstyled d-flex align-items-center">
                    <li class="d-lg-none mr-sm-5">
                        <button class="btn link-body p-0 offcanvas-button" type="button">
                            <svg class="gi gi-arrow-circle-left fs-4" width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm-.293 6.293a1 1 0 0 0-1.414 0h0l-3 3-.083.094a1 1 0 0 0 .083 1.32h0l3 3 .094.083a1 1 0 0 0 1.32-.083h0l.083-.094a1 1 0 0 0-.083-1.32h0L10.416 13H16l.117-.007A1 1 0 0 0 16 11h0-5.586l1.293-1.293.083-.094a1 1 0 0 0-.083-1.32z"></path>
                            </svg>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="invisible-scrollbar position-relative wh-main">
                <div class="row mt-3">
                    @if (Model.Count > 0 && Model != null)
                    {
                        @foreach (var complaint in Model)
                        {
                            <div class="col-lg-6 mb-4">
                                <div class="w-100 h-100 bg-body-light rounded d-flex p-3">
                                    <div class="d-flex align-items-start flex-column w-100">
                                        <div class="w-100 d-flex align-items-center mb-3">
                                            <span class="d-inline-flex flex-shrink-0 align-items-center justify-content-center mr-3 text-white text-uppercase bg-primary rounded-circle  wh-2-5rem">@complaint.Title.ToCharArray()[0]</span>
                                            <h2 class="fs-1 lh-tight">@complaint.Title</h2>
                                            <div class="mr-auto"></div>
                                            @if (complaint.Status.Equals(ComplaintStatus.Pending))
                                            {
                                                <p class="badge bg-warning text-white">
                                                    @ComplaintStatus.Pending
                                                </p>
                                            }
                                            else if (complaint.Status.Equals(ComplaintStatus.Investigating))
                                            {
                                                <p class="badge bg-info text-white">
                                                    @ComplaintStatus.Investigating
                                                </p>
                                            }
                                            else if (complaint.Status.Equals(ComplaintStatus.Resolved))
                                            {
                                                <p class="badge bg-success text-white h-auto">
                                                    @ComplaintStatus.Resolved
                                                </p>
                                            }
                                        </div>
                                        <div class="d-flex w-100">
                                            <div class="mr-auto"></div>
                                            <button type="button" data-toggle="modal" data-target="#editComplaintModal-@complaint.Id" class="btn btn-auto d-inline-flex flex-shrink-0 align-items-center bg-body justify-content-center p-0 rounded-circle wh-2-5rem mr-1">
                                                <svg width="1em" height="1em" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="gi gi-edit-2 fs-2">
                                                    <path d="M16.57 2.47l.107.1 2.754 2.754a1.95 1.95 0 0 1 .099 2.647l-.1.107-8.72 8.72c-.255.255-.576.434-.925.517l-.177.034L5.112 18c-.6.086-1.12-.388-1.11-.974v-.127l.642-4.497c.05-.357.2-.692.43-.968l.12-.133 8.72-8.72a1.95 1.95 0 0 1 2.647-.099zM15.3 3.947l-2.065 2.065 2.754 2.754L18.053 6.7 15.3 3.947zM19 20a1 1 0 0 1 .117 1.993L19 22H5a1 1 0 0 1-.117-1.993L5 20h14z"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-info">
                                <p>No Complaints Found</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </main>
</div>
@if (Model.Count > 0 && Model != null)
{
    foreach (var complaint in Model)
    {
        <partial name="_EditComplaintPartial" model="@ModelHelpers.GetEditComplaintViewModel(complaint)" />
    }
}